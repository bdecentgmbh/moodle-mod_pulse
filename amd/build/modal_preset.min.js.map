{"version":3,"file":"modal_preset.min.js","sources":["../src/modal_preset.js"],"sourcesContent":["define(['jquery', 'core/notification', 'core/custom_interaction_events', 'core/modal', 'core/modal_registry', 'mod_pulse/events'],\r\n        function($, Notification, CustomEvents, Modal, ModalRegistry, PresetEvents) {\r\n\r\n    var registered = false;\r\n    var SELECTORS = {\r\n        SAVE_BUTTON: '[data-action=\"save\"]',\r\n        CUSTOMIZE_BUTTON: '[data-action=\"customize\"]',\r\n        CANCEL_BUTTON: '[data-action=\"cancel\"]',\r\n    };\r\n\r\n    /**\r\n     * Constructor for the Modal.\r\n     *\r\n     * @param {object} root The root jQuery element for the modal\r\n     */\r\n    var ModalPreset = function(root) {\r\n        Modal.call(this, root);\r\n\r\n        if (!this.getFooter().find(SELECTORS.SAVE_BUTTON).length) {\r\n            Notification.exception({message: 'No \"Apply and save\" button found'});\r\n        }\r\n\r\n        if (!this.getFooter().find(SELECTORS.CUSTOMIZE_BUTTON).length) {\r\n            Notification.exception({message: 'No \"Apply and customize\" button found'});\r\n        }\r\n\r\n        if (!this.getFooter().find(SELECTORS.CANCEL_BUTTON).length) {\r\n            Notification.exception({message: 'No cancel button found'});\r\n        }\r\n    };\r\n\r\n    ModalPreset.TYPE = 'PresetModal';\r\n    ModalPreset.prototype = Object.create(Modal.prototype);\r\n    ModalPreset.prototype.constructor = ModalPreset;\r\n    ModalPreset.prototype.formData = '';\r\n\r\n    /**\r\n     * Set up all of the event handling for the modal.\r\n     *\r\n     * @method registerEventListeners\r\n     */\r\n    ModalPreset.prototype.registerEventListeners = function() {\r\n        // Apply parent event listeners.\r\n        Modal.prototype.registerEventListeners.call(this);\r\n\r\n        this.getModal().on(CustomEvents.events.activate, SELECTORS.SAVE_BUTTON, function(event, data) {\r\n            // Load the backupfile.\r\n            document.querySelectorAll('.preset-config-params form.mform').forEach(form => {\r\n                form.importmethod.value = 'save';\r\n                form.addEventListener('submit', function(e) {\r\n                    e.preventDefault();\r\n                });\r\n            });\r\n\r\n            if (document.querySelectorAll('.preset-config-params [data-fieldtype=\"submit\"] input').length != 0) {\r\n                document.querySelectorAll('.preset-config-params [data-fieldtype=\"submit\"] input')[0].click();\r\n            }\r\n\r\n            var approveEvent = $.Event(PresetEvents.save);\r\n            this.getRoot().trigger(approveEvent, this);\r\n\r\n            if (!approveEvent.isDefaultPrevented()) {\r\n                this.destroy();\r\n                data.originalEvent.preventDefault();\r\n            }\r\n            event.preventDefault();\r\n        }.bind(this));\r\n\r\n\r\n        this.getModal().on(CustomEvents.events.activate, SELECTORS.CUSTOMIZE_BUTTON, function(event, data) {\r\n            // Add your logic for when the login button is clicked. This could include the form validation,\r\n            document.querySelectorAll('.preset-config-params form.mform').forEach(form => {\r\n                form.importmethod.value = 'customize';\r\n            });\r\n\r\n            var customizeEvent = $.Event(PresetEvents.customize);\r\n            this.getRoot().trigger(customizeEvent, this);\r\n\r\n            if (!customizeEvent.isDefaultPrevented()) {\r\n                data.originalEvent.preventDefault();\r\n            }\r\n            event.preventDefault();\r\n\r\n        }.bind(this));\r\n\r\n        this.getModal().on(CustomEvents.events.activate, SELECTORS.CANCEL_BUTTON, function() {\r\n            this.destroy();\r\n        }.bind(this));\r\n    };\r\n\r\n    // Automatically register with the modal registry the first time this module is imported so that you can create modals\r\n    // of this type using the modal factory.\r\n    if (!registered) {\r\n        ModalRegistry.register(ModalPreset.TYPE, ModalPreset, 'mod_pulse/modal_preset');\r\n        registered = true;\r\n    }\r\n\r\n    return ModalPreset;\r\n});\r\n"],"names":["define","$","Notification","CustomEvents","Modal","ModalRegistry","PresetEvents","registered","SELECTORS","ModalPreset","root","call","this","getFooter","find","length","exception","message","TYPE","prototype","Object","create","constructor","formData","registerEventListeners","getModal","on","events","activate","event","data","document","querySelectorAll","forEach","form","importmethod","value","addEventListener","e","preventDefault","click","approveEvent","Event","save","getRoot","trigger","isDefaultPrevented","destroy","originalEvent","bind","customizeEvent","customize","register"],"mappings":"AAAAA,gCAAO,CAAC,SAAU,oBAAqB,iCAAkC,aAAc,sBAAuB,qBACtG,SAASC,EAAGC,aAAcC,aAAcC,MAAOC,cAAeC,kBAE9DC,YAAa,EACbC,sBACa,uBADbA,2BAEkB,4BAFlBA,wBAGe,yBAQfC,YAAc,SAASC,MACvBN,MAAMO,KAAKC,KAAMF,MAEZE,KAAKC,YAAYC,KAAKN,uBAAuBO,QAC9Cb,aAAac,UAAU,CAACC,QAAS,qCAGhCL,KAAKC,YAAYC,KAAKN,4BAA4BO,QACnDb,aAAac,UAAU,CAACC,QAAS,0CAGhCL,KAAKC,YAAYC,KAAKN,yBAAyBO,QAChDb,aAAac,UAAU,CAACC,QAAS,mCAIzCR,YAAYS,KAAO,eACnBT,YAAYU,UAAYC,OAAOC,OAAOjB,MAAMe,YACtBG,YAAcb,YACpCA,YAAYU,UAAUI,SAAW,GAOjCd,YAAYU,UAAUK,uBAAyB,WAE3CpB,MAAMe,UAAUK,uBAAuBb,KAAKC,WAEvCa,WAAWC,GAAGvB,aAAawB,OAAOC,SAAUpB,sBAAuB,SAASqB,MAAOC,MAEpFC,SAASC,iBAAiB,oCAAoCC,SAAQC,OAClEA,KAAKC,aAAaC,MAAQ,OAC1BF,KAAKG,iBAAiB,UAAU,SAASC,GACrCA,EAAEC,uBAIuF,GAA7FR,SAASC,iBAAiB,yDAAyDjB,QACnFgB,SAASC,iBAAiB,yDAAyD,GAAGQ,YAGtFC,aAAexC,EAAEyC,MAAMpC,aAAaqC,WACnCC,UAAUC,QAAQJ,aAAc7B,MAEhC6B,aAAaK,4BACTC,UACLjB,KAAKkB,cAAcT,kBAEvBV,MAAMU,kBACRU,KAAKrC,YAGFa,WAAWC,GAAGvB,aAAawB,OAAOC,SAAUpB,2BAA4B,SAASqB,MAAOC,MAEzFC,SAASC,iBAAiB,oCAAoCC,SAAQC,OAClEA,KAAKC,aAAaC,MAAQ,mBAG1Bc,eAAiBjD,EAAEyC,MAAMpC,aAAa6C,gBACrCP,UAAUC,QAAQK,eAAgBtC,MAElCsC,eAAeJ,sBAChBhB,KAAKkB,cAAcT,iBAEvBV,MAAMU,kBAERU,KAAKrC,YAEFa,WAAWC,GAAGvB,aAAawB,OAAOC,SAAUpB,wBAAyB,gBACjEuC,WACPE,KAAKrC,QAKNL,aACDF,cAAc+C,SAAS3C,YAAYS,KAAMT,YAAa,0BACtDF,YAAa,GAGVE"}