{"version":3,"file":"preset.min.js","sources":["../src/preset.js"],"sourcesContent":["define(['jquery', 'core/modal_factory', 'mod_pulse/modal_preset', 'mod_pulse/events', 'core/str',\r\n'core/fragment', 'core/ajax', 'core/templates', 'core/loadingicon', 'core/notification', 'core/modal_events'],\r\n    function($, Modal, ModalPreset, PresetEvents, Str, Fragment, AJAX, Templates, Loadingicon, Notification, ModalEvents) {\r\n\r\n    var SELECTOR = {\r\n        presetAvailability: '.preset-config-params .availability-field'\r\n    };\r\n\r\n    /**\r\n     * Preset module declaration. Setup the global values.\r\n     * @param  {int} contextId\r\n     * @param  {int} courseid\r\n     * @param  {int} section\r\n     */\r\n    var Preset = function(contextId, courseid, section) {\r\n        this.contextId = contextId;\r\n        this.courseid = courseid;\r\n        this.section = section;\r\n        this.loadPresetsList();\r\n    };\r\n\r\n    Preset.prototype.listElement = {'selector': 'pulse-presets-data', \"loaded\": \"data-listloaded\"};\r\n\r\n    Preset.prototype.contextId = 0;\r\n\r\n    Preset.prototype.courseid = 0;\r\n\r\n    Preset.prototype.section = 0;\r\n\r\n    Preset.prototype.pageparams = [];\r\n\r\n    Preset.prototype.loadIconElement = '.modal-footer #loader-icon';\r\n\r\n    Preset.prototype.actionbuttons = '.modal-footer button';\r\n\r\n    /**\r\n     * Setup the presets modal event listeners.\r\n     */\r\n    Preset.prototype.setupmodal = function() {\r\n\r\n        var THIS = this;\r\n\r\n        var triggerelement = document.querySelectorAll('.pulse-usepreset');\r\n        // Modal attachment point.\r\n        var attachmentPoint = document.createElement('div');\r\n        attachmentPoint.classList.add('modal-preset');\r\n        triggerelement.forEach((element) => element.addEventListener('click', () => {\r\n            var presetid = element.getAttribute('data-presetid');\r\n            var presettitle = element.getAttribute('data-presettitle');\r\n            var params = {'presetid': presetid, 'courseid': THIS.courseid, 'section': THIS.section};\r\n\r\n            document.body.prepend(attachmentPoint);\r\n            Modal.create({\r\n                type: ModalPreset.TYPE,\r\n                title: Str.get_string('presetmodaltitle', 'pulse', {'title': presettitle}),\r\n                body: Fragment.loadFragment('mod_pulse', 'get_preset_preview', THIS.contextId, params),\r\n                large: true,\r\n            }).then(modal => {\r\n                // Make the modal attachment point to overcome the restriction access condition.\r\n                modal.attachmentPoint = attachmentPoint;\r\n                modal.show();\r\n                modal.getRoot().on(ModalEvents.bodyRendered, function() {\r\n                    THIS.reinitAvailability(SELECTOR.presetAvailability);\r\n                    THIS.fieldChangedEvent();\r\n                });\r\n                // Destroy the modal on hidden to reload the editors.\r\n                modal.getRoot().on(ModalEvents.hidden, function() {\r\n                    modal.destroy.bind(modal);\r\n                    THIS.reinitAvailability();\r\n                });\r\n\r\n                // Apply and customize method.\r\n                modal.getRoot().on(PresetEvents.customize, () => {\r\n                    var modform = document.querySelector('#mod-pulse-form');\r\n                    var modformdata = new FormData(modform);\r\n                    modal.getRoot().get(0).querySelectorAll('form').forEach(form => {\r\n                        var formdata = new FormData(form);\r\n                        formdata = new URLSearchParams(formdata).toString();\r\n                        var pageparams = new URLSearchParams(modformdata).toString();\r\n                        params = {formdata: formdata, pageparams: pageparams};\r\n\r\n                        Loadingicon.addIconToContainer(this.loadIconElement);\r\n                        THIS.disableButtons();\r\n                        THIS.applyCustomize(params, THIS.contextId, modal);\r\n                    });\r\n                });\r\n                // Apply and save method.\r\n                modal.getRoot().on(PresetEvents.save, (e) => {\r\n                    e.preventDefault();\r\n                    Loadingicon.addIconToContainer(this.loadIconElement);\r\n                    THIS.disableButtons();\r\n                    var formdata = {};\r\n                    modal.getRoot().get(0).querySelectorAll('form').forEach(form => {\r\n                        formdata = new FormData(form);\r\n                        this.restorePreset(formdata, THIS.contextId);\r\n                    });\r\n                });\r\n                return true;\r\n            }).catch(Notification.exception);\r\n        }));\r\n    };\r\n\r\n\r\n    Preset.prototype.fieldChangedEvent = () => {\r\n        var confParam = document.getElementById(\"preset-configurable-params\");\r\n        var reminders = ['first', 'second', 'recurring'];\r\n        var methods = ['fixed', 'relative'];\r\n        var fieldName, changeinput, id, changeName, split;\r\n        confParam.querySelectorAll('input, select, textarea').forEach(field => {\r\n            field.addEventListener('change', (event) => {\r\n                fieldName = event.target.getAttribute('name');\r\n                if (confParam.querySelector('input[name=\"' + fieldName + '_changed\"]') !== null) {\r\n                    confParam.querySelector('input[name=\"' + fieldName + '_changed\"]').value = true;\r\n                }\r\n            });\r\n        });\r\n\r\n        reminders.forEach(reminder => {\r\n            confParam.querySelectorAll('[name=\"' + reminder + '_schedule\"').forEach(schedule => {\r\n                schedule.addEventListener('change', (e) => {\r\n                    changeName = e.target.getAttribute('name');\r\n                    changeinput = 'input[name=\"' + changeName + '_arr_changed\"]';\r\n                    confParam.querySelector(changeinput).value = true;\r\n                });\r\n            });\r\n            methods.forEach(method => {\r\n                id = reminder + \"_\" + method + \"date\";\r\n                confParam.querySelectorAll('[name*=\"' + id + '\"]').forEach(opt => {\r\n                    opt.addEventListener('change', (e) => {\r\n                        split = e.target.getAttribute('name').split('[');\r\n                        changeName = (split.hasOwnProperty(1)) ? split[0] : split;\r\n                        changeinput = 'input[name=\"' + changeName + '_changed\"]';\r\n                        confParam.querySelector(changeinput).value = true;\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Reinitialize the availability javascript.\r\n     * @param {string} selector\r\n     */\r\n    Preset.prototype.reinitAvailability = function(selector = '.availability-field') {\r\n        if (typeof M.core_availability.form !== \"undefined\") {\r\n            this.resetRestrictPlugins();\r\n            document.querySelectorAll(selector).forEach((field) => field.parentNode.removeChild(field));\r\n            M.core_availability.form.init();\r\n        }\r\n    };\r\n\r\n    Preset.prototype.resetRestrictPlugins = function() {\r\n        if (typeof M.core_availability.form !== \"undefined\" && document.getElementById('id_availabilityconditionsjson') !== null) {\r\n            M.core_availability.form.restrictByGroup = null;\r\n            var availabilityPlugins = (typeof M.core_availability.form.plugins !== 'undefined')\r\n                ? M.core_availability.form.plugins : {};\r\n            var plugin = '';\r\n            for (var i in availabilityPlugins) {\r\n                plugin = \"availability_\" + i;\r\n                if (M.hasOwnProperty(plugin)) {\r\n                    M[plugin].form.addedEvents = false;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Apply and customize triggered using fragment. Response will replaced with current mod form.\r\n     * @param  {string} params\r\n     * @param  {int} contextID\r\n     * @param  {object} modal\r\n     */\r\n    Preset.prototype.applyCustomize = function(params, contextID, modal) {\r\n        Fragment.loadFragment('mod_pulse', 'apply_preset', contextID, params).done((html, js) => {\r\n            modal.destroy();\r\n            // Reset the availability to work for upcoming response html.\r\n            this.resetRestrictPlugins();\r\n            this.handleFormSubmissionResponse(html, js);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Disable the modal save and customize buttons to prevent reinit.\r\n     */\r\n    Preset.prototype.disableButtons = function() {\r\n        var buttons = document.querySelectorAll(this.actionbuttons);\r\n        for (let $i in buttons) {\r\n            buttons[$i].disabled = true;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle the loaded fragment output of customize method pulse mod.\r\n     * @param  {html} data\r\n     * @param  {string} js\r\n     */\r\n    Preset.prototype.handleFormSubmissionResponse = (data, js) => {\r\n        var newform = document.createElement('div');\r\n        newform.innerHTML = data;\r\n        Templates.replaceNode('[action=\"modedit.php\"]', data, js);\r\n\r\n    };\r\n\r\n    /**\r\n     * Initiate the apply and save method to create the pulse module with custom daa.\r\n     * @param  {FormData} formdata\r\n     * @param  {int} contextid\r\n     */\r\n    Preset.prototype.restorePreset = (formdata, contextid) => {\r\n        var formdatastr = new URLSearchParams(formdata).toString();\r\n        var promises = AJAX.call([{\r\n            methodname: 'mod_pulse_apply_presets',\r\n            args: {contextid: contextid, formdata: formdatastr}\r\n        }]);\r\n\r\n        promises[0].done((response) => {\r\n            response = JSON.parse(response);\r\n            if (typeof response.url != 'undefined') {\r\n                window.location.href = response.url;\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Load list of available presets.\r\n     */\r\n    Preset.prototype.loadPresetsList = function() {\r\n        var listParent = document.getElementById(this.listElement.selector);\r\n\r\n        if (listParent !== null) {\r\n            if (listParent.getAttribute(this.listElement.loaded) == 'false') {\r\n                Fragment.loadFragment('mod_pulse', 'get_presetslist', this.contextId, {'courseid': this.courseid})\r\n                .done((html, js) => {\r\n                    Templates.replaceNodeContents(listParent, html, js);\r\n                    listParent.setAttribute(this.listElement.loaded, 'true');\r\n                    this.setupmodal();\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    return {\r\n        init: (contextId, courseid, section) => {\r\n            new Preset(contextId, courseid, section);\r\n        }\r\n    };\r\n});\r\n"],"names":["define","$","Modal","ModalPreset","PresetEvents","Str","Fragment","AJAX","Templates","Loadingicon","Notification","ModalEvents","SELECTOR","Preset","contextId","courseid","section","loadPresetsList","prototype","listElement","pageparams","loadIconElement","actionbuttons","setupmodal","THIS","this","triggerelement","document","querySelectorAll","attachmentPoint","createElement","classList","add","forEach","element","addEventListener","presetid","getAttribute","presettitle","params","body","prepend","create","type","TYPE","title","get_string","loadFragment","large","then","modal","show","getRoot","on","bodyRendered","reinitAvailability","fieldChangedEvent","hidden","destroy","bind","customize","modform","querySelector","modformdata","FormData","get","form","formdata","URLSearchParams","toString","addIconToContainer","disableButtons","applyCustomize","save","e","preventDefault","restorePreset","catch","exception","fieldName","changeinput","id","changeName","split","confParam","getElementById","methods","field","event","target","value","reminder","schedule","method","opt","hasOwnProperty","selector","M","core_availability","resetRestrictPlugins","parentNode","removeChild","init","restrictByGroup","availabilityPlugins","plugins","plugin","i","addedEvents","contextID","done","html","js","handleFormSubmissionResponse","buttons","$i","disabled","data","innerHTML","replaceNode","contextid","formdatastr","call","methodname","args","response","JSON","parse","url","window","location","href","listParent","loaded","replaceNodeContents","setAttribute"],"mappings":"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"}